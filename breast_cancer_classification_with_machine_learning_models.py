# -*- coding: utf-8 -*-
"""Breast Cancer Classification with Machine Learning Models.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kii4CGTXBjPeOXfP2UCP8pC2ET5nZyXc

Title  : "Breast Cancer Classification with Machine Learning Models" <br>
Author : "Khoerul Anam" <br>
Data   : Breast Cancer from Scikit learn
"""

import pandas as pd
from sklearn import datasets

data = datasets.load_breast_cancer()

x=data.data
y=data.target

df_x = pd.DataFrame(data.data, columns=data.feature_names)
df_y = pd.Series(y, name='target')

df_x

df_y

df = pd.concat([df_x,df_y], axis=1)
df.head()

df.info()

df.isnull().sum()

df['target'].unique()

df.describe()

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

"""##Random Forest"""

from sklearn.ensemble import RandomForestClassifier

rf = RandomForestClassifier(n_estimators=100, random_state=42)
rf.fit(x_train, y_train)

from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

y_pred = rf.predict(x_test)

rf_accuracy = accuracy_score(y_test,y_pred)
print('Accuracy:' ,rf_accuracy)

import seaborn as sns
import matplotlib.pyplot as plt

cm = confusion_matrix(y_test,y_pred)
sns.heatmap(cm, annot=True, fmt='d', cmap="Blues",
            xticklabels=data.target_names, yticklabels=data.target_names)
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.show()

print(classification_report(y_test,y_pred, target_names=data.target_names))

"""## KNN"""

from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score

knn_model = KNeighborsClassifier(n_neighbors=5)

knn_model.fit(x_train, y_train)

y_pred = knn_model.predict(x_test)

knn_accuracy = accuracy_score(y_test, y_pred)
print('Accuracy',knn_accuracy)

import seaborn as sns
import matplotlib.pyplot as plt

cm = confusion_matrix(y_test,y_pred)
sns.heatmap(cm, annot=True,fmt='d', xticklabels=data.target_names, yticklabels=data.target_names)
plt.xlabel('Prediksi')
plt.ylabel('Actual')
plt.show()

print(classification_report(y_test,y_pred, target_names=data.target_names))

"""## SVM"""

import matplotlib.pyplot as plt
from sklearn.svm import SVC

svm_model = SVC(kernel='linear')
svm_model.fit(x_train, y_train)

y_pred = svm_model.predict(x_test)

svm_accuracy = accuracy_score(y_test, y_pred)
print('Accuracy:', svm_accuracy)

cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True, fmt='d', cmap="Blues",
            xticklabels=data.target_names, yticklabels=data.target_names)
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.show()

print(classification_report(y_test, y_pred, target_names=data.target_names))

"""## Naive Bayes


"""

from sklearn.naive_bayes import GaussianNB

nb_model = GaussianNB()
nb_model.fit(x_train,y_train)

y_pred = nb_model.predict(x_test)
nb_accuracy = accuracy_score(y_test,y_pred)

print('Accuracy : ', nb_accuracy)

cm = confusion_matrix(y_test,y_pred)
sns.heatmap(cm, annot=True, fmt='d',cmap='Blues', xticklabels=data.target_names, yticklabels=data.target_names)
plt.xlabel('Predict')
plt.ylabel('Actual')
plt.show()

print(classification_report(y_test,y_pred, target_names=data.target_names))

"""## Comparison"""

models = ['Random Forest', 'SVM', 'Naive Bayes', 'KNN']
accuracies = [rf_accuracy, svm_accuracy, nb_accuracy, knn_accuracy]


plt.figure(figsize=(10, 6))
bars = plt.bar(models, accuracies, color='navy')

plt.title('Akurasi Model Klasifikasi pada Dataset Breast Cancer', fontsize=14)
plt.xlabel('Model', fontsize=12)
plt.ylabel('Akurasi', fontsize=12)
plt.ylim(0, 1)


for bar, accuracy in zip(bars, accuracies):
    plt.text(bar.get_x() + bar.get_width() / 2, bar.get_height() + 0.01,
             f'{accuracy:.2f}', ha='center', va='bottom', color='black', fontsize=10)

plt.show()